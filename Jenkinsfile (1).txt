#!groovy
//  groovy Jenkinsfile
properties([disableConcurrentBuilds()])\

pipeline  {
        agent { 
           label ''
        }

    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("Postgres") {
            steps {
                sh '''
                docker network create zabbix-net
                docker run -d\
                --name zabbix-postgres \
                --network zabbix-net \
                -v /var/lib/zabbix/timezone:/etc/timezone \
                -v /var/lib/zabbix/localtime:/etc/localtime \
                -e POSTGRES_PASSWORD=zabbix \
                -e POSTGRES_USER=zabbix \
                -d postgres:alpine
                '''
            }
        }
        stage("Create docker image Postgres") {
            steps {
                echo 'Creating docker image ...'
                dir('.'){
                    sh "docker build --no-cache -t oleg222/zabbix:pos  ."
                }
            }
        }
        stage("Zab-serv") {
            steps {
                sh '''
                docker run
                --name zabbix-server
                --network zabbix-net
                -v /var/lib/zabbix/alertscripts:/usr/lib/zabbix/alertscripts
                -v /var/lib/zabbix/timezone:/etc/timezone
                -v /var/lib/zabbix/localtime:/etc/localtime
                -p 10051:10051 
                -e DB_SERVER_HOST="zabbix-postgres"
                -e POSTGRES_USER="zabbix"
                -e POSTGRES_PASSWORD="zabbix"
                -d zabbix/zabbix-server-pgsql:alpine-latest
                '''
            }
        }
        stage("Create docker image Zab-serv") {
            steps {
                echo 'Creating docker image ...'
                dir('.'){
                    sh "docker build --no-cache -t oleg222/zabbix:serv  ."
                }
            }
        }
        stage("Zab-web") {
            steps {
                sh '''
                docker run
                --name zabbix-web
                -p 80:8080 -p 443:8443
                --network zabbix-net
                -e DB_SERVER_HOST="zabbix-postgres"
                -v /var/lib/zabbix/timezone:/etc/timezone
                -v /var/lib/zabbix/localtime:/etc/localtime
                -e POSTGRES_USER="zabbix"
                -e POSTGRES_PASSWORD="zabbix"
                -e ZBX_SERVER_HOST="zabbix-server"
                -e PHP_TZ="Europe/Kiev"
                -d zabbix/zabbix-web-nginx-pgsql:alpine-latest
                '''
            }
        }
        stage("Create docker image Zab-web") {
            steps {
                echo 'Creating docker image ...'
                dir('.'){
                    sh "docker build --no-cache -t oleg222/zabbix:webm  . "
                }
            }
        }
        stage("docker login") {
            steps {
                echo " ============== docker login =================="
                withCredentials([usernamePassword(credentialsId: 'DockerHub-Credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh '''
                    docker login -u $USERNAME -p $PASSWORD
                    '''
                }
            }
        }
        stage("docker push") {
            steps {
                echo " ============== pushing image =================="
                sh '''
                docker push oleg222/zabbix:pos 
                docker push oleg222/zabbix:serv
                docker push oleg222/zabbix:webm 
                '''
            }
        }
    }
}
